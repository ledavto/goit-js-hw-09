{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAmBC,SAASC,cAAc,UAG1CC,GAFkBF,SAASC,cAAc,uBAC7BD,SAASC,cAAc,sBACrBD,SAASC,cAAc,yBAE3CE,QAAQC,IAAIF,EAAYG,OAIxBN,EAAiBO,iBAAiB,UAIlC,SAAuBC,EAAUC,EAAOC,GACtCA,EAAMC,iBAEN,IAAK,IAAIC,EAAQ,EAAGA,EAAQC,OAAOV,EAAYG,OAAQM,IACvDR,QAAQC,IAAIO,GAGUE,KAAKC,SAAW,IAEpCC,EAAAlB,GAASmB,OAAOC,QAAQ,QACxBd,QAAQC,IAAIF,EAAYG,QAGxBU,EAAAlB,GAASmB,OAAOC,QAAQ,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst createPromiseBtn = document.querySelector('button');\nconst inputFirstDelay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\n\nconsole.log(inputAmount.value);\n\n\n\ncreatePromiseBtn.addEventListener('submit', createPromise);\n\n\n\nfunction createPromise(position, delay, event) {\n  event.preventDefault();\n\n  for (let index = 0; index < Number(inputAmount.value); index++) {\n  console.log(index);\n  \n}\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notiflix.Notify.failure('GOOD');\n    console.log(inputAmount.value);\n  } else {\n    // Reject\n    Notiflix.Notify.failure('BAD');\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromiseBtn","document","querySelector","$ce04d3a99e08e73b$var$inputAmount","console","log","value","addEventListener","position","delay","event","preventDefault","index","Number","Math","random","$parcel$interopDefault","Notify","failure"],"version":3,"file":"03-promises.2aebd457.js.map"}